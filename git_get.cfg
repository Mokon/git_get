#!/usr/bin/perl
# The MIT License (MIT)
#
# Copyright (c) 2015 David Bond
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# all author names within the keys of this hash are replaced with their values
$cfg->{author_name_aliases} = {
  'dbond' => 'David Bond',
};

# all emails within the keys of this hash are replaced with their values
$cfg->{email_aliases} = {};

# commits with a sha1 that match a key of this hash are filtered from inclusion
$cfg->{filter_hashes} = {
  'be70db51e0de1e3cfb1ed0133ffe887bbb77b03e' => 'comment/description',
};

# only commits with an email address ending in the given domain are included
$cfg->{filter_email_domain} = "mokon.net";

# the number of max and min values of a stat to display
$cfg->{num_max_commits} = 3;
$cfg->{num_min_commits} = 3;

# toggle for whether or not to output stats on the authors
$cfg->{output_stats_on_authors} = 'true';

# toggle to include git submodule commits
$cfg->{include_submodules} = 'true';

# toggle to include the root git submodule commits
$cfg->{include_root_module} = 'true';

# toggle to filter commits from inclusion based on the filter hashes sha1
$cfg->{filter_by_hashes} = 'false';

# toggle to filter commits that don't change any files from inclusion
$cfg->{filter_empty_merges} = 'true';

# toggle to filter commits that don't match the filter email domain
$cfg->{filter_by_email_domain} = 'true';

# debugging toggle to output the results data structure
$cfg->{output_results_dump} = 'false';

# debugging toggle to output the results
$cfg->{output_results} = 'true';

# debugging toggle to output the cfg used
$cfg->{output_cfg} = 'false';
